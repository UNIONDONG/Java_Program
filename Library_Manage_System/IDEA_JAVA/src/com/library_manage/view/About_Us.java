package com.library_manage.view;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import java.awt.*;

public class About_Us {
    private JLabel Tag;
    private JPanel About;
    private JFrame about_frame;

    public About_Us() {
        about_frame = new JFrame("关于我们");
        about_frame.setContentPane(About);
        about_frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        about_frame.pack();
        about_frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        About = new JPanel();
        About.setLayout(new com.jgoodies.forms.layout.FormLayout("fill:559px:grow", "center:431px:grow"));
        About.setBackground(new Color(-10227157));
        Tag = new JLabel();
        Tag.setEnabled(true);
        Font TagFont = this.$$$getFont$$$("Cooper Black", Font.BOLD, 72, Tag.getFont());
        if (TagFont != null) Tag.setFont(TagFont);
        Tag.setForeground(new Color(-63734));
        Tag.setHorizontalAlignment(0);
        Tag.setHorizontalTextPosition(0);
        Tag.setText("UPRE");
        Tag.setVerticalAlignment(0);
        com.jgoodies.forms.layout.CellConstraints cc = new com.jgoodies.forms.layout.CellConstraints();
        About.add(Tag, cc.xy(1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return About;
    }

}
