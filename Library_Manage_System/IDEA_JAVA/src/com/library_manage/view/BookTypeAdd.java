package com.library_manage.view;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.library_manage.dao.BookTypeDAO;
import com.library_manage.model.BookType;
import com.library_manage.util.DbUtil;
import com.library_manage.util.StringUtil;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;

public class BookTypeAdd {

    private JPanel book_type_add;
    private JTextField BTN_Txt;
    private JLabel BTN_Lab;
    private JLabel BTD_Lab;
    private JTextArea BTD_Txt;
    private JButton Add;
    private JButton Reset;
    private DbUtil dbutil = new DbUtil();
    private BookTypeDAO booktypedao = new BookTypeDAO();
    private JFrame frame;

    public BookTypeAdd() {
        frame = new JFrame("图书类别添加");
        frame.setContentPane(book_type_add);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        //添加 监听器
        Add.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Add_ActPfm(e);
            }
        });
        //重置 监听器
        Reset.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Reset_ActPfm();
            }
        });
    }

    /**
     * @param ActionEvent
     * @return null
     * @throws null
     * @Description: 添加图书类别
     * @author Dong
     * @date 2018/11/28 16:18
     */
    private void Add_ActPfm(ActionEvent e) {
        String book_type_name = this.BTN_Txt.getText();                     //获取窗口值
        String book_type_disc = this.BTD_Txt.getText();
        if (StringUtil.isEmpty(book_type_name)) {
            JOptionPane.showMessageDialog(null, "图书类别名称不能为空！");
            return;
        }
        BookType booktype = new BookType(book_type_name, book_type_disc);   //构造对象
        Connection con = null;
        try {
            con = dbutil.getCon();
            int n = booktypedao.Add(con, booktype);
            if (n == 1) {
                JOptionPane.showMessageDialog(null, "图书类别添加成功！");
                Reset_ActPfm();
            } else {
                JOptionPane.showMessageDialog(null, "图书类别添加失败！");
            }
        } catch (Exception evt) {
            evt.printStackTrace();
            JOptionPane.showMessageDialog(null, "图书类别添加失败！");
        } finally {
            try {
                dbutil.closeCon(con);
            } catch (Exception evt) {
                evt.printStackTrace();
            }
        }
    }

    /**
     * @param null
     * @return null
     * @throws null
     * @Description: 重置信息
     * @author Dong
     * @date 2018/11/28 16:20
     */
    private void Reset_ActPfm() {
        this.BTD_Txt.setText("");
        this.BTN_Txt.setText("");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        book_type_add = new JPanel();
        book_type_add.setLayout(new com.jgoodies.forms.layout.FormLayout("fill:319px:noGrow,left:118dlu:noGrow,left:68dlu:noGrow,fill:max(d;4px):noGrow", "center:154px:noGrow,top:13dlu:noGrow,center:147px:noGrow,top:15dlu:noGrow,center:87px:noGrow"));
        book_type_add.setBackground(new Color(-5593172));
        BTN_Lab = new JLabel();
        Font BTN_LabFont = this.$$$getFont$$$(null, Font.BOLD, 16, BTN_Lab.getFont());
        if (BTN_LabFont != null) BTN_Lab.setFont(BTN_LabFont);
        BTN_Lab.setText("图书类别名称：");
        com.jgoodies.forms.layout.CellConstraints cc = new com.jgoodies.forms.layout.CellConstraints();
        book_type_add.add(BTN_Lab, cc.xy(1, 1, com.jgoodies.forms.layout.CellConstraints.CENTER, com.jgoodies.forms.layout.CellConstraints.BOTTOM));
        BTD_Lab = new JLabel();
        BTD_Lab.setEnabled(true);
        Font BTD_LabFont = this.$$$getFont$$$(null, Font.BOLD, 16, BTD_Lab.getFont());
        if (BTD_LabFont != null) BTD_Lab.setFont(BTD_LabFont);
        BTD_Lab.setText("图书类别描述：");
        book_type_add.add(BTD_Lab, cc.xy(1, 3, com.jgoodies.forms.layout.CellConstraints.CENTER, com.jgoodies.forms.layout.CellConstraints.CENTER));
        Add = new JButton();
        Font AddFont = this.$$$getFont$$$(null, Font.BOLD, -1, Add.getFont());
        if (AddFont != null) Add.setFont(AddFont);
        Add.setIcon(new ImageIcon(getClass().getResource("/image/add_16px.png")));
        Add.setText("添加");
        book_type_add.add(Add, new com.jgoodies.forms.layout.CellConstraints(1, 5, 1, 1, com.jgoodies.forms.layout.CellConstraints.CENTER, com.jgoodies.forms.layout.CellConstraints.CENTER, new Insets(0, 130, 0, 0)));
        BTD_Txt = new JTextArea();
        book_type_add.add(BTD_Txt, cc.xy(2, 3, com.jgoodies.forms.layout.CellConstraints.FILL, com.jgoodies.forms.layout.CellConstraints.FILL));
        BTN_Txt = new JTextField();
        book_type_add.add(BTN_Txt, cc.xy(2, 1, com.jgoodies.forms.layout.CellConstraints.FILL, com.jgoodies.forms.layout.CellConstraints.BOTTOM));
        Reset = new JButton();
        Font ResetFont = this.$$$getFont$$$(null, Font.BOLD, -1, Reset.getFont());
        if (ResetFont != null) Reset.setFont(ResetFont);
        Reset.setIcon(new ImageIcon(getClass().getResource("/image/Restart.png")));
        Reset.setText("重置");
        book_type_add.add(Reset, new com.jgoodies.forms.layout.CellConstraints(2, 5, 1, 1, com.jgoodies.forms.layout.CellConstraints.CENTER, com.jgoodies.forms.layout.CellConstraints.CENTER, new Insets(0, 0, 0, 60)));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return book_type_add;
    }

}
